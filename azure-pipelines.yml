# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
 - task: SonarCloudPrepare@1
   displayName: 'Prepare analysis configuration'
   inputs:
     SonarCloud: 'SonarSC'
     organization: 'ferozar'
     scannerMode: 'Other'
     extraProperties: |
       # Additional properties that will be passed to the scanner,
       # Put one key=value per line, example:
       # sonar.exclusions=**/*.bin
       sonar.projectKey=ferozar_Weather-Bot
       sonar.projectName=Weather Bot

 - task: DownloadSecureFile@1
   name: git-crypt-secret-key
   displayName: "Download secret key"
   inputs:
     secureFile: git-crypt-secret-key
 - task: Bash@3
   displayName: "GitCrypt Unlock"
   inputs:
     targetType: "inline"
     script: |
       sudo apt-get update
       sudo apt-get install git-crypt
       git-crypt unlock $(git-crypt-secret-key.secureFilePath)

 - task: Maven@3
   inputs:
     mavenPomFile: 'pom.xml'
     publishJUnitResults: true
     testResultsFiles: '**/surefire-reports/TEST-*.xml'
     javaHomeOption: 'JDKVersion'
     jdkVersionOption: '1.17'
     mavenVersionOption: 'Default'
     mavenOptions: '-Xmx3072m'
     mavenAuthenticateFeed: false
     effectivePomSkip: false
     sonarQubeRunAnalysis: true
     sqMavenPluginVersionChoice: 'pom'

 - task: SonarCloudPublish@1
   displayName: 'Publish results on build summary'
   inputs:
     pollingTimeoutSec: '1000'

 - task: Docker@2
   inputs:
     containerRegistry: 'Docker hub weather'
     repository: 'z0r3f/weather-docker'
     command: 'buildAndPush'
     Dockerfile: '**/Dockerfile'
     tags: |
       $(Build.BuildId)
       latest
